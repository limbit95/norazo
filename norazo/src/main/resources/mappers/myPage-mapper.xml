<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.norazo.myPage.model.mapper.MyPageMapper">
	
	<!-- 회원 정보 수정 -->
	<update id="updateInfo">
		UPDATE "MEMBER" SET
		MEMBER_NICKNAME = #{memberNickname},
		GENDER = #{gender},
		MEMBER_ADDRESS = #{memberAddress},
		MEMBER_INTRODUCE = #{memberIntroduce}
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 회원의 비밀번호 조회 -->
	<select id="selectPw">
		SELECT MEMBER_PW
		FROM "MEMBER"
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 비밀번호 변경 -->
	<update id="changePw">
		UPDATE "MEMBER" SET
		MEMBER_PW = #{encPw}
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 회원 탈퇴 -->
	<update id="secession">
		UPDATE "MEMBER" SET
		MEMBER_DEL_FL = 'Y'
		WHERE MEMBER_NO = #{memberNo}
	</update>

	<update id="profile">
		UPDATE "MEMBER" SET
		PROFILE_IMG = #{profileImg}
		WHERE MEMBER_NO = #{memberNo}
	</update>

	<!-- 닉네임 중복 검사 -->
	<select id="checkNickname" resultType="int">
		SELECT COUNT(*)
		FROM "MEMBER"
		WHERE MEMBER_DEL_FL = 'N'
		AND MEMBER_NICKNAME = #{memberNickname}
		AND MEMBER_NO != #{memberNo}
	</select>

  <select id="getMyCreateListCount">	
		SELECT COUNT(*)
		FROM "BOARD"
		WHERE BOARD_DEL_FL = 'N' 
		AND BOARD_CODE = 1
		AND MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 내가 만든 모임 목록 조회 -->
	<select id="selectMyCreateBoardList">		
		SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, SPORTS_CODE, 
		<![CDATA[
		CASE 
			WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 / 60 
			THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60 * 60) || '초 전'
			
			WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 
			THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60) || '분 전'
		
			WHEN SYSDATE - BOARD_WRITE_DATE < 1 
			THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24) || '시간 전'
			
			ELSE TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM-DD')
			
		END BOARD_WRITE_DATE
		]]>
		FROM BOARD
		JOIN "MEMBER" USING(MEMBER_NO)
		JOIN BOARD_TYPE USING(BOARD_CODE)
		JOIN SPORTS_TYPE USING(SPORTS_CODE)
		WHERE BOARD_DEL_FL = 'N' 
		AND BOARD_CODE = 1
		AND MEMBER_NO = #{memberNo}
		ORDER BY MEETING_DATE
	</select>
	
	<select id="getMyBelongListCount">	
		SELECT COUNT(*)
		FROM "BOARD"
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE BOARD_NO IN(SELECT BOARD_NO FROM ATTEND_MEMBER WHERE MEMBER_NO = #{memberNo})
		AND MEMBER_NO != #{memberNo}
		AND BOARD_DEL_FL = 'N'
	</select>
	
	<!-- 내가 속한 모임 목록 조회 -->
	<select id="selectMyBelongBoardList">		
		SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, SPORTS_CODE, 
			<![CDATA[
			CASE 
				WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 / 60 
				THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60 * 60) || '초 전' 
				 
				WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 
				THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60) || '분 전' 
			 	 
				WHEN SYSDATE - BOARD_WRITE_DATE < 1 
				THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24) || '시간 전' 
				 
				ELSE TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM-DD')
			END BOARD_WRITE_DATE 
			]]>
		FROM "BOARD"
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE BOARD_NO IN(SELECT BOARD_NO FROM ATTEND_MEMBER WHERE MEMBER_NO = #{memberNo})
		AND MEMBER_NO != #{memberNo}
		AND BOARD_DEL_FL = 'N'
	</select>
	
	<select id="getMyHeartListCount">	
		SELECT COUNT(*)
		FROM "BOARD" B
		JOIN "MEMBER" M ON (B.MEMBER_NO = M.MEMBER_NO)
		JOIN "BOARD_LIKE" BL ON (B.BOARD_NO = BL.BOARD_NO)
		WHERE B.MEMBER_NO != #{memberNo}
		AND B.BOARD_NO IN(SELECT BOARD_NO FROM BOARD_LIKE WHERE MEMBER_NO = #{memberNo})
		AND B.BOARD_DEL_FL = 'N'
		ORDER BY BL.LIKE_NO
	</select>
	
		<!-- 내가 찜한 모임 목록 조회 -->
	<select id="selectMyHeartBoardList">		
		SELECT B.BOARD_NO, B.BOARD_TITLE, M.MEMBER_NICKNAME, SPORTS_CODE, 
			<![CDATA[
			CASE 
				WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 / 60 
				THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60 * 60) || '초 전'
				
				WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 
				THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60) || '분 전'
			
				WHEN SYSDATE - BOARD_WRITE_DATE < 1 
				THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24) || '시간 전'
				
				ELSE TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM-DD')
			END BOARD_WRITE_DATE
			]]>
		FROM "BOARD" B
		JOIN "MEMBER" M ON (B.MEMBER_NO = M.MEMBER_NO)
		JOIN "BOARD_LIKE" BL ON (B.BOARD_NO = BL.BOARD_NO)
		WHERE B.MEMBER_NO != #{memberNo}
		AND BL.BOARD_NO IN(SELECT BL.BOARD_NO FROM BOARD_LIKE WHERE BL.MEMBER_NO = #{memberNo})
		AND B.BOARD_DEL_FL = 'N'
		ORDER BY BL.LIKE_NO
	</select>
</mapper>
